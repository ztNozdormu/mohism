package ${package}.${moduleName}.entity;

import com.baomidou.mybatisplus.annotations.TableId;
import com.baomidou.mybatisplus.annotations.TableName;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.lang.reflect.InvocationTargetException;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end
import java.io.Serializable;
import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.apache.commons.beanutils.BeanUtils;
import com.baomidou.mybatisplus.annotations.TableField;
import com.baomidou.mybatisplus.enums.FieldFill;



/**
 * ${comments}
 * 数据库通用操作实体类（普通增删改查）
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@TableName("${tableName}")
@ApiModel(value = "${className}")
public class ${className}Entity<T> implements Serializable {
	private static final long serialVersionUID = 1L;


	public ${className}Entity() {
		
	}
	
	public ${className}Entity(T t) {
		try {
			BeanUtils.copyProperties(this, t);
		} catch (IllegalAccessException | InvocationTargetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

#foreach ($column in $columns)
	/**
	 * $column.comments
	 */
	#if($column.columnName == $pk.columnName)

	@TableId #end
	#if($column.isNullable == 'NO' && $column.columnName != $pk.columnName  && $column.attrType != 'String')
	
	@NotNull (message = "${column.comments}不能为空") #end
	#if($column.isNullable == 'NO' && $column.columnName != $pk.columnName  && $column.attrType == 'String')
	
	@NotBlank (message = "${column.comments}不能为空") #end
	#if($column.attrType == 'Date')
	
	@JsonFormat(locale="zh", timezone="GMT+8", pattern="yyyy-MM-dd HH:mm:ss")
	@DateTimeFormat #end
	#if($column.attrname == 'updateBy' || $column.attrname == 'updateTime')
	
	@TableField(fill = FieldFill.UPDATE) #end
	#if($column.attrname == 'createBy' || $column.attrname == 'createTime')
	
	@TableField(fill = FieldFill.INSERT) #end

	@ApiModelProperty(value = "${column.comments}"#if($column.columnName == $pk.columnName || $column.attrname == 'updateBy' || $column.attrname == 'createBy' || $column.attrname == 'updateTime' || $column.attrname == 'createTime'),hidden = true#end)
	private $column.attrType $column.attrname;
	
#end
#foreach ($column in $columns)
	/**
	 * 设置：${column.comments}
	 */
	public void set${column.attrName}($column.attrType $column.attrname) {
		this.$column.attrname = $column.attrname;
	}
	/**
	 * 获取：${column.comments}
	 */
	public $column.attrType get${column.attrName}() {
		return $column.attrname;
	}
#end
}
